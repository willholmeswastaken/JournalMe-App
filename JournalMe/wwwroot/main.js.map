{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/components/dashboard/dashboard.component.html","webpack:///./src/components/dashboard/dashboard.component.ts","webpack:///./src/components/landing/landing.component.html","webpack:///./src/components/landing/landing.component.ts","webpack:///./src/components/nav/nav.component.html","webpack:///./src/components/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/guards/auth.guard.ts","webpack:///./src/main.ts","webpack:///./src/services/user.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<nav-component></nav-component><div class=\"main main-raised\"><div class=\"section\"><div class=\"container\">       <router-outlet></router-outlet></div></div></div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService, FacebookLoginProvider, GoogleLoginProvider } from 'angular5-social-login';\nimport { UserService } from '../services/user.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  public isLoggedIn: Observable<boolean>;\n\n  constructor(private userService: UserService){\n    this.isLoggedIn = this.userService.isLoggedIn();\n  }\n\n  ngOnInit(): void{\n\n  }\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {\n  SocialLoginModule,\n  AuthServiceConfig,\n  GoogleLoginProvider,\n  FacebookLoginProvider,\n} from \"angular5-social-login\";\n\nimport { AppComponent } from './app.component';\nimport { LogInComponent } from '../components/login/login.component';\nimport { appRouting } from './app.routing';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { UserService } from '../services/user.service';\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\nimport { NavComponent } from '../components/nav/nav.component';\nimport { AuthGuard } from '../guards/auth.guard';\n\n// Configs \nexport function getAuthServiceConfigs() {\n  let config = new AuthServiceConfig(\n      [\n        {\n          id: FacebookLoginProvider.PROVIDER_ID,\n          provider: new FacebookLoginProvider(\"Your-Facebook-app-id\")\n        },\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\"295354893520-88hnl131aoedcu22f2lktfa21e8stun2.apps.googleusercontent.com\")\n        },\n      ]);\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogInComponent,\n    LandingComponent,\n    DashboardComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    SocialLoginModule,\n    appRouting\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: getAuthServiceConfigs\n    },\n    UserService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"row\">   <div class=\"col-12\"><h2>Welcome back, {{user.name}}</h2><p>Make sure you log your journal for today!</p></div></div>","import { Component } from \"@angular/core\";\nimport { UserService } from \"../../services/user.service\";\nimport { SocialUser } from \"angular5-social-login\";\n\n\n@Component({\n    selector: 'dashboard-component',\n    templateUrl: './dashboard.component.html'\n})\n\nexport class DashboardComponent{\n\n    public user: SocialUser;\n\n    constructor(private userService: UserService){\n        this.user = this.userService.getUser();\n    }\n}","<div class=\"row\">   <div class=\"col-12\"><h2>Welcome to JournalMe</h2><p>The journaling app for you to record your daily life!</p></div></div>","import { Component, OnInit } from \"@angular/core\";\n\n\n@Component({\n    selector: 'landing-component',\n    templateUrl: './landing.component.html'\n})\nexport class LandingComponent implements OnInit{\n    ngOnInit(): void{\n        \n    }\n}","<nav class=\"navbar navbar-default navbar-expand-lg\" role=\"navigation-demo\"><div class=\"container\"><!-- Brand and toggle get grouped for better mobile display--><div class=\"navbar-translate\"></div><a class=\"navbar-brand\" href=\"/presentation.html\">JournalMe</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span><span class=\"navbar-toggler-icon\"></span><span class=\"navbar-toggler-icon\"></span></button><!-- Collect the nav links, forms, and other content for toggling--><div class=\"collapse navbar-collapse\"></div><ul class=\"navbar-nav ml-auto\"><li class=\"nav-item\"></li><a class=\"nav-link\" href=\"#pablo\">Discover</a><li class=\"nav-item\"></li><a class=\"nav-link\" href=\"#pablo\">My Journals</a><li class=\"nav-item\"></li><a class=\"btn btn-rose btn-raised btn-round\" (click)=\"socialSignIn('google')\" *ngIf=\"!(isLoggedIn | async)\">Log In</a><a class=\"btn btn-rose btn-raised btn-round\" (click)=\"socialSignOut()\" *ngIf=\"(isLoggedIn | async)\">Log Out</a></ul></div></nav>","import { Component } from \"@angular/core\";\nimport { UserService } from \"../../services/user.service\";\nimport { map } from 'rxjs/operators';\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n    selector: 'nav-component',\n    templateUrl: './nav.component.html'\n})\nexport class NavComponent{\n    \n    public isLoggedIn: Observable<boolean>;\n\n    constructor(public userService: UserService, private router: Router){\n        this.isLoggedIn = this.userService.isLoggedIn();\n    }\n  \n    public socialSignIn(socialPlatform : string) {\n      this.userService.logIn(socialPlatform);\n    }\n\n    public socialSignOut(): void{\n        this.userService.logOut();\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CanActivate, Router } from \"@angular/router\";\nimport { UserService } from \"../services/user.service\";\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n    \n    constructor(private userService: UserService, private router: Router){\n\n    }\n\n    canActivate(): boolean {\n        if(this.userService.getIsLoggedIn()){\n            return true;\n        }\n        this.router.navigate(['/landing']);\n        return false;\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Injectable } from \"@angular/core\";\nimport { AuthService, FacebookLoginProvider, GoogleLoginProvider, SocialUser } from \"angular5-social-login\";\nimport { Router } from \"@angular/router\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class UserService{\n\n    public isLoggedInSubject = new BehaviorSubject<boolean>(this.getIsLoggedIn());\n    \n    constructor(public socialAuthService: AuthService, private router: Router){\n        \n    }\n\n    public getUser(): SocialUser{\n        return JSON.parse(localStorage.getItem('userLoggedIn'));\n    }\n\n    //Login functionality\n    public getIsLoggedIn(): boolean{\n        let userResult = this.getUser();\n\n        let loggedInBool = userResult != null;\n\n        console.log(loggedInBool);\n        \n        return loggedInBool;\n    }\n\n    public isLoggedIn(): Observable<boolean>{\n        return this.isLoggedInSubject.asObservable();\n    }\n\n    public logIn(socialPlatform: string): void{\n        let socialPlatformProvider;\n\n        if(socialPlatform == \"facebook\"){\n        socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n        }\n        else if(socialPlatform == \"google\"){\n        socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n        }\n        \n        this.socialAuthService.signIn(socialPlatformProvider).then(\n        (userData) => {\n            console.log(socialPlatform+\" sign in data : \" , userData);   \n            localStorage.setItem('userLoggedIn', JSON.stringify(userData)) ;\n            this.isLoggedInSubject.next(this.getIsLoggedIn());\n\n            this.router.navigate(['/dashboard']);\n        });\n    }\n\n    public logOut(): void {\n        localStorage.removeItem('userLoggedIn');\n        this.isLoggedInSubject.next(this.getIsLoggedIn());\n        this.router.navigate(['/landing']);\n    }\n}"],"sourceRoot":""}